# -*- mode: shell-script; sh-shell: zsh; sh-basic-offset: 4; sh-indentation: 4; coding: utf-8 -*-

# ------------------------------------------------------------------------------
# .zprofile
#
# .zprofile is sourced after .zshenv for all login and interactive shells.

# ------------------------------------------------------------------------------
# Initialize Homebrew Environment
if [[ -x /opt/homebrew/bin/brew ]]; then
    eval "$(/opt/homebrew/bin/brew shellenv)"
fi

# ------------------------------------------------------------------------------
# PATH settings

# _tbh_prepend_dir_to_path
#   Add the given directory, if it exists, to the beginning of the path
_tbh_prepend_dir_to_path() {
    local -r dir=$1

    if [[ -d "${dir}" ]]; then
        path=("$dir" $path)
    fi
}

# _tbh_append_dir_to_path
#   Add the given directory, if it exists, to the end of the path
_tbh_append_dir_to_path() {
    local -r dir=$1

    if [[ -d "${dir}" ]]; then
        path+=("$dir")
    fi
}

# Export the path array and its mirror PATH string; including setting unique for
# the path array, which keeps just the first occurance of a directory in the
# array.
typeset -gxU path
typeset -gx PATH

# Rust / Cargo Support
_tbh_prepend_dir_to_path "${HOME}/.cargo/bin"
# GHC Up / GHC Haskell Support
_tbh_prepend_dir_to_path "${HOME}/.ghcup/bin"
_tbh_prepend_dir_to_path "${HOME}/.cabal/bin"
# Local Directory
_tbh_prepend_dir_to_path "${HOME}/.local/bin"

# ------------------------------------------------------------------------------
# Set Up MyCmd
#   In a function to take advantage of locals
_tbh_set_up_mycmd() {
    local dir
    local mycmd_dir
    local mycmd_bin

    for dir ( "${HOME}/Developer/Personal/mycmd/snapshot"  "${HOME}/Developer/Personal/mycmd/main" "${HOME}/Developer/mycmd" ); do
        if [[ -d "${dir}" ]]; then
            mycmd_dir="${dir}"
            break
        fi
    done

    if [[ -z "${mycmd_dir-}" ]]; then
        echo >&2 "Cannot find MyCmd checkout."
        return
    fi

    mycmd_bin="${mycmd_dir}/bin"
    typeset -rgx MYCMD_SYSTEM_BASE_DIR="${mycmd_dir}/mycmd"
    _tbh_prepend_dir_to_path "${mycmd_bin}"
}

_tbh_set_up_mycmd

# This is called last to ensure it is first
_tbh_prepend_dir_to_path "${HOME}/bin"

# ------------------------------------------------------------------------------
# mise support
if command -v mise &>/dev/null; then
    eval "$(mise activate zsh --shims)"
fi

# ------------------------------------------------------------------------------
# Common settings

# Enable color in mac OS ls(1) listings
typeset -rgxi CLICOLOR=1

# Common less options
typeset -rgx LESS="-iFXR"

# Set and create a common cache directory for Zsh related cache files
{{ if eq .chezmoi.os "darwin" -}}
typeset -rgx _TBH_ZSH_CACHE_DIR="${HOME}/Library/Caches/zsh"
{{ else }}
typeset -rgx _TBH_ZSH_CACHE_DIR="${HOME}/.cache/zsh"
{{ end -}}
mkdir -p "${_TBH_ZSH_CACHE_DIR}"

# Configure Orbstack
{{ if eq .chezmoi.os "darwin" -}}
if [[ -e "$HOME/.orbstack/shell/init.zsh" ]]; then
    source "$HOME/.orbstack/shell/init.zsh" 2>/dev/null
fi
{{ end -}}
