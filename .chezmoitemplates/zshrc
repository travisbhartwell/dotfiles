# -*- mode: shell-script; sh-shell: zsh; sh-basic-offset: 4; sh-indentation: 4; coding: utf-8 -*-

# ------------------------------------------------------------------------------
# .zshrc
#
# .zshrc is sourced after .zshenv and .zprofile for login and interactive shells

# ------------------------------------------------------------------------------
# General sourcing support

# _tbh_source_if_exists
#   Source the specified file if it exists
_tbh_source_if_exists() {
    local -r full_path=$1

    if [[ -e "${full_path}" ]]; then
        source "${full_path}"
        return 0
    else
        return 1
    fi
}

# ------------------------------------------------------------------------------
# Plugin Loading Support

# _tbh_load_zsh_plugin_if_exists
#   Loads the specified Zsh plugin if it exists in ${ZDOTDIR}/plugins
_tbh_load_zsh_plugin_if_exists() {
    local -r plugin_name=$1
    local -r plugin_base_dir="${ZDOTDIR}/plugins"

    local plugin_file

    for plugin_file in "${plugin_name}/${plugin_name}.plugin.zsh" \
        "${plugin_name}/${plugin_name}.plugin.zsh"; do
        local full_plugin_path="${plugin_base_dir}/${plugin_file}"

        if _tbh_source_if_exists "${full_plugin_path}"; then
            break
        fi
    done
}

# ------------------------------------------------------------------------------
# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/$ZDOTDIR/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
# https://github.com/romkatv/powerlevel10k#how-do-i-initialize-direnv-when-using-instant-prompt
#
# Also initialize direnv.
(( ${+commands[direnv]} )) && emulate zsh -c "$(direnv export zsh)"

if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

(( ${+commands[direnv]} )) && emulate zsh -c "$(direnv hook zsh)"

# ------------------------------------------------------------------------------
# History Configuration
HISTFILE="${_TBH_ZSH_CACHE_DIR}/zsh_history"
typeset -gxi HISTSIZE=1000000
typeset -gxi SAVEHIST=1000000

# Add timestamp to each history item
setopt EXTENDED_HISTORY

# Settings to ensure no duplicate commands are in the history file
setopt HIST_EXPIRE_DUPS_FIRST
setopt HIST_IGNORE_DUPS
# Performs history expansin and reloads the line into the editing buffer
setopt HIST_VERIFY
# Reads and writes the history file on each command --
# enables history sharing across Zsh sessions.
setopt SHARE_HISTORY

# ------------------------------------------------------------------------------
# Editing / Keybinds Configuration

# ------------------------------------------------------------------------------
# Function and completion Configuration

# Export the fpath array and its mirror FPATH string; including setting unique for
# the fpath array, which keeps just the first occurance of a directory in the
# array.
typeset -gxU fpath
typeset -gx FPATH

_tbh_add_function_dir_to_path_if_exists() {
    local -r dir=$1

    if [[ -d "${dir}" ]]; then
        fpath+=("$dir")
    fi
}

# Configure Local Functions
_tbh_local_function_dir="${ZDOTDIR}/functions"
_tbh_add_function_dir_to_path_if_exists "${_tbh_local_function_dir}"
autoload -Uz ${_tbh_local_function_dir}/*(.:t)
unset _tbh_local_function_dir

# ------------------------------------------------------------------------------
# Nix Zsh Completions
# https://github.com/nix-community/nix-zsh-completions
_tbh_load_zsh_plugin_if_exists nix-zsh-completions
_tbh_add_function_dir_to_path_if_exists "${ZDOTDIR}/plugins/nix-zsh-completions"

# Configure Completions
_tbh_add_function_dir_to_path_if_exists "${ZDOTDIR}/completions"

if command -v brew &> /dev/null; then
   _tbh_add_function_dir_to_path_if_exists "$(brew --prefix)/share/zsh/site-functions"
fi

autoload -Uz compinit
compinit

# Automatically rehash
zstyle ':completion:*' rehash true

# Cache completions
if [[ -v _TBH_ZSH_CACHE_DIR ]]; then
    zstyle ':completion:*' use-cache on
    zstyle ':completion:*' cache-path "${_TBH_ZSH_CACHE_DIR}"
fi

# ------------------------------------------------------------------------------
# Aliases
{{ if eq .chezmoi.os "darwin" -}}
alias strip-ansi="gsed 's/\x1b\[[0-9;]*m//g'"
{{ else }}
alias strip-ansi="sed 's/\x1b\[[0-9;]*m//g'"
{{ end }}
# ------------------------------------------------------------------------------
# AutoSuggestions Plugin
# https://github.com/zsh-users/zsh-autosuggestions
_tbh_load_zsh_plugin_if_exists zsh-autosuggestions

# ------------------------------------------------------------------------------
# Move Help
autoload -Uz zmv

# ------------------------------------------------------------------------------
# Enable iTerm shell integration
# https://iterm2.com/documentation-shell-integration.html
if [[ "${__CFBundleIdentifier}" = "com.googlecode.iterm2" ]]; then
    _tbh_source_if_exists "${ZDOTDIR}/iterm_zsh_integration.sh"
fi

# ------------------------------------------------------------------------------
# Fast Syntax Highlighting Plugin
#
# https://github.com/zdharma-continuum/fast-syntax-highlighting
_tbh_load_zsh_plugin_if_exists fast-syntax-highlighting

# ------------------------------------------------------------------------------
# Zsh Vi Mode Plugin
#
# https://github.com/jeffreytse/zsh-vi-mode
_tbh_load_zsh_plugin_if_exists zsh-vi-mode

# ------------------------------------------------------------------------------
# Powerlevel 10k
#
# https://github.com/romkatv/powerlevel10k
function _tbh_load_powerlevel10k() {
    local -r powerlevel_dir="${ZDOTDIR}/themes/powerlevel10k"
    local -r source_file="${powerlevel_dir}/powerlevel10k.zsh-theme"
    local -r config_file="${ZDOTDIR}/.p10k.zsh"

    _tbh_source_if_exists "${source_file}"
    _tbh_source_if_exists "${config_file}"
}

_tbh_load_powerlevel10k
