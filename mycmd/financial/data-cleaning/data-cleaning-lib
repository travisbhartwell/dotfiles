# -*- mode: shell-script; sh-shell: bash; sh-basic-offset: 4; sh-indentation: 4; coding: utf-8 -*-
# shellcheck shell=bash

(return 0 >/dev/null 2>&1) || {
    echo >&2 "$0 is a library only meant to be sourced."
    exit 1
}

mycmd:command_group.register_version "1.0"
mycmd:command_group.register_short_description "financial account data file cleaning tools"

[[ -n "${_MYCMD_SOURCING_FOR_HELP:-}" ]] && return

[[ -n "${_MYCMD_FINANCIAL_DATA_CLEANING_LIB:-}" ]] && return
readonly _MYCMD_FINANCIAL_DATA_CLEANING_LIB=1

# Common tool required for everything in this module
mycmd.defer_at_startup mycmd.init_bin datacleanup

function data_cleaning.clean_capitalone_checking_csv() {
    local date="$1"

    local source_file
    if ! source_file=$(financial.capital_one_checking_original_csv_by_date "${date}"); then
        mycmd.err_exit 1 "Cannot find original CSV for Capital One Checking for date ${date}."
    fi
    readonly source_file

    local destination_file
    if ! destination_file=$(allow_missing_file=true financial.capital_one_checking_cleaned_csv_by_date "${date}"); then
        mycmd.err_exit 1 "Error getting claened file name for Capital One Checking for date ${date}."
    fi
    readonly destination_file

    mycmd.trace "Cleaning Capital One Checking CSV for date '${date}':\
        Source File: ${source_file}\
        Destination File: ${destination_file}."

    mycmd.bin_execute datacleanup capital-one "${source_file}" "${destination_file}"
}

function data_cleaning.clean_capitalone_savings_csv() {
    local date="$1"

    local source_file
    if ! source_file=$(financial.capital_one_savings_original_csv_by_date "${date}"); then
        mycmd.err_exit 1 "Cannot find original CSV for Capital One Savings for date ${date}."
    fi
    readonly source_file

    local destination_file
    if ! destination_file=$(allow_missing_file=true financial.capital_one_savings_cleaned_csv_by_date "${date}"); then
        mycmd.err_exit 1 "Error getting claened file name for Capital One Savings for date ${date}."
    fi
    readonly destination_file

    mycmd.trace "Cleaning Capital One Savings CSV for date '${date}':\
        Source File: ${source_file}\
        Destination File: ${destination_file}."

    mycmd.bin_execute datacleanup capital-one "${source_file}" "${destination_file}"
}

function data_cleaning.clean_chase_visa_csv() {
    local date="$1"

    local source_file
    if ! source_file=$(financial.chase_visa_original_csv_by_date "${date}"); then
        mycmd.err_exit 1 "Cannot find original CSV for Chase Visa for date ${date}."
    fi
    readonly source_file

    local destination_file
    if ! destination_file=$(allow_missing_file=true financial.chase_visa_cleaned_csv_by_date "${date}"); then
        mycmd.err_exit 1 "Error getting claened file name for Chase Visa for date ${date}."
    fi
    readonly destination_file

    mycmd.trace "Cleaning Chase Visa CSV for date '${date}':\
        Source File: ${source_file}\
        Destination File: ${destination_file}."

    mycmd.bin_execute datacleanup chase-visa "${source_file}" "${destination_file}"
}

mycmd.trace "The Financal Data Cleaning library has been sourced."
