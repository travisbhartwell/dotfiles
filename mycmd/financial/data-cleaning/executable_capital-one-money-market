#!/usr/bin/env -S mycmd
# -*- mode: shell-script; sh-shell: bash; sh-basic-offset: 4; sh-indentation: 4; coding: utf-8 -*-
# shellcheck shell=bash

if [[ -v _MYCMD_VERSION ]]; then
    mycmd:command.register_version "1.0"
    mycmd:command.register_short_description "clean an original, un-processed Capital One Money Market CSV file"

    # shellcheck disable=SC2154
    mycmd:command.register_help_text "${_MYCMD_NAMESPACED_PARTS_STRING} <date>"
    mycmd:command.register_help_text "\t date - the date corresponding to the file to be cleaned\n"
    mycmd:command.register_help_text "${_MYCMD_NAMESPACED_PARTS_STRING} -h | --help"
    mycmd:command.register_help_text "${_MYCMD_NAMESPACED_PARTS_STRING} -v | --version"
    mycmd:command.register_help_text "Options:"
    mycmd:command.register_help_text "\t-h | --help    - Show this help"
    mycmd:command.register_help_text "\t-v | --version - Show this command's version"

    [[ -n "${_MYCMD_SOURCING_FOR_HELP:-}" ]] && return
else
    mycmd.register_command_version "1.0"
    mycmd.register_command_short_desc "clean an original, un-processed Capital One Money Market CSV file"

    mycmd.add_command_help_line "$(mycmd.running_command_parts_from_path || true) <date>"
    mycmd.add_command_help_line "\t date - the date corresponding to the file to be cleaned\n"
    mycmd.add_command_help_line "$(mycmd.running_command_parts_from_path || true) -h | --help"
    mycmd.add_command_help_line "$(mycmd.running_command_parts_from_path || true) -v | --version"
    mycmd.add_command_help_line "Options:"
    mycmd.add_command_help_line "\t-h | --help    - Show this help"
    mycmd.add_command_help_line "\t-v | --version - Show this command's version"

    [[ -n "${_MYCMD_SOURCING_COMMAND_FOR_HELP:-}" ]] && return
fi

set -o nounset -o errexit -o errtrace -o pipefail

function mycmd.main() {
    local date="$1"

    data_cleaning.clean_capitalone_money_market_csv "${date}"
}
