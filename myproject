#!/usr/bin/env bash
# -*- mode: shell-script; sh-shell: bash; sh-basic-offset: 4; sh-indentation: 4; coding: utf-8 -*-
# shellcheck shell=bash

set -o nounset -o errexit -o errtrace -o pipefail

project.load_task_library "shell"

# shellcheck disable=SC2154
readonly MYCMD_DIR="${MYPROJECT_BASE_DIR}/mycmd"
# shellcheck disable=SC2154
readonly BOOTSTRAP_DIR="${MYPROJECT_BASE_DIR}/bootstrap"
# shellcheck disable=SC2154
readonly TEMPLATE_DIR="${MYPROJECT_BASE_DIR}/.chezmoitemplates"
# shellcheck disable=SC2154
readonly DATA_DIR="${MYPROJECT_BASE_DIR}/.chezmoidata"

mycmd.output "MYCMD_DIR: ${MYCMD_DIR}"

project.register_fileset ALL_BASH_SCRIPTS
project.find_files_for_fileset ALL_BASH_SCRIPTS "${BOOTSTRAP_DIR}" "${MYCMD_DIR}" -type f
# shellcheck disable=SC2154
project.add_files_to_fileset ALL_BASH_SCRIPTS "${MYPROJECT_PROJECT_FILE}"

project.register_task_with_fileset list-all-bash-scripts project.list-files ALL_BASH_SCRIPTS
project.register_task_with_fileset format-all-bash-scripts project:shell.format ALL_BASH_SCRIPTS
project.register_task_with_fileset lint-all-bash-scripts project:shell.lint ALL_BASH_SCRIPTS

project.register_fileset ALL_COMMAND_GROUPS
project.find_files_for_fileset ALL_COMMAND_GROUPS "${MYCMD_DIR}" -name "*-lib" -type f
project.register_task_with_fileset list-all-command-groups project.list-files ALL_COMMAND_GROUPS

project.register_fileset ALL_COMMANDS
project.find_files_for_fileset ALL_COMMANDS "${MYCMD_DIR}" -type f ! -name "*-lib"
project.register_task_with_fileset list-all-commands project.list-files ALL_COMMANDS

mycmd.defer_at_startup mycmd.init_bin chezmoi

if mycmd.is_mac_os; then
    mycmd.defer_at_startup mycmd.init_bin brew

    function diff-packages-toml() {
        # shellcheck disable=SC2312
        diff \
            <(mycmd.bin_execute brew bundle dump --force --file=- 2>/dev/null | sort -u) \
            <(mycmd.bin_execute chezmoi execute-template <"${TEMPLATE_DIR}/Brewfile" | sort -u)
    }
    project.register_task diff-packages-toml

    mycmd.defer_at_startup mycmd.init_bin toml-sort
    function format-packages-toml() {
        mycmd.bin_execute toml-sort --all --in-place --sort-first taps,brews,casks "${DATA_DIR}/packages.toml"
    }
    project.register_task format-packages-toml
fi

function apply-changes() {
    mycmd.bin_execute chezmoi apply -v
}
project.register_task apply-changes
project.register_default_task apply-changes
